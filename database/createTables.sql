-- DROP TABLES IN ORDER TO AVOID FK CONSTRAINT ERRORS
DROP TABLE IF EXISTS messages;
DROP TABLE IF EXISTS chats;
DROP TABLE IF EXISTS user_courses;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS courses;

-- USERS TABLE
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(100) NOT NULL,
    role TINYINT(1) NOT NULL -- 0 = student, 1 = professor
);

-- COURSES TABLE
CREATE TABLE courses (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) UNIQUE NOT NULL,
    courseCode VARCHAR(6) UNIQUE,
    description TEXT,
    filepath VARCHAR(100) UNIQUE
);

-- USER_COURSES TABLE (join table)
CREATE TABLE user_courses (
    userCoursesId INT AUTO_INCREMENT PRIMARY KEY,
    userId INT NOT NULL,
    courseId INT NOT NULL,
    FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (courseId) REFERENCES courses(id) ON DELETE CASCADE
);

-- CHATS TABLE
CREATE TABLE chats (
    chatId INT AUTO_INCREMENT PRIMARY KEY,
    userCoursesId INT NOT NULL,
    creationTime DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (userCoursesId) REFERENCES user_courses(userCoursesId) ON DELETE CASCADE
);

-- MESSAGES TABLE
CREATE TABLE messages (
    messageId INT AUTO_INCREMENT PRIMARY KEY,
    chatId INT NOT NULL,
    question TEXT,
    answer TEXT,
    sourceName VARCHAR(100),
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (chatId) REFERENCES chats(chatId) ON DELETE CASCADE
);
